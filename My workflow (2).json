{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "content": "# üåê AI Customer Support Assistant - Cloud Version\n\n## What this workflow does:\nThis AI-powered customer support automation processes incoming support requests via email or chat, analyzes them using AI, retrieves relevant context, and generates draft responses for support agents.\n\n## Key Features:\n‚úÖ **Multi-channel Input**: Email & chat triggers\n‚úÖ **AI-powered Analysis**: Extracts sentiment, urgency, and key information\n‚úÖ **Context Integration**: Combines product manuals, ERP data, and support history\n‚úÖ **Draft Response Generation**: Creates professional responses in German\n‚úÖ **Human-in-the-loop**: Approval workflow before sending to customers\n\n## Demo Instructions:\n1. Use the Chat interface to test with sample customer queries\n2. Or send test emails to trigger the email workflow\n3. Watch how AI analyzes and generates contextual responses\n\n**üåê This is the CLOUD version using OpenAI and Google services**",
        "height": 760,
        "width": 450
      },
      "id": "51166203-e713-40f9-be2a-3d9386259fc8",
      "name": "üìã Workflow Overview",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -112,
        -112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìß Email Trigger\n\n**Purpose**: Monitors Gmail for incoming customer support requests\n\n**How it works**:\n‚Ä¢ Polls Gmail every minute for new emails\n‚Ä¢ Filters can be configured for specific labels/criteria\n‚Ä¢ Extracts email content, sender info, and metadata\n\n**Demo tip**: Send a test email to see this in action!",
        "height": 320,
        "width": 280,
        "color": 2
      },
      "id": "91ea13f5-2ad0-40e4-ba4a-73585f6bc345",
      "name": "üìß Email Input",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "id": "540be5a4-6903-4864-9c13-0e434852d80a",
      "name": "üìß Support Email Received",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        512,
        560
      ],
      "typeVersion": 1.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "zI7PUrqzCOLQvL3p",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## üí¨ Chat Trigger\n\n**Purpose**: Provides a real-time chat interface for testing\n\n**How it works**:\n‚Ä¢ Creates a webhook URL for chat interactions\n‚Ä¢ Ideal for demos and testing scenarios\n‚Ä¢ Processes messages instantly\n\n**Demo tip**: Perfect for live demonstrations!",
        "height": 320,
        "width": 280,
        "color": 2
      },
      "id": "e08f2299-c4ee-4c62-bdb8-8b55436422ea",
      "name": "üí¨ Chat Input",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        1056
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üß† AI Information Extractor\n\n**Purpose**: Analyzes customer messages with AI to extract structured data\n\n**Extracts**:\n‚Ä¢ Category (technical, billing, sales, etc.)\n‚Ä¢ Urgency level (low, medium, high, critical)\n‚Ä¢ Customer sentiment\n‚Ä¢ Keywords for context search\n‚Ä¢ Product identifiers\n‚Ä¢ Required action type\n\n**AI Model**: OpenAI GPT-4o-mini",
        "height": 380,
        "width": 300,
        "color": 3
      },
      "id": "8d48e1d0-575f-4072-98cb-b853e7770315",
      "name": "üß† AI Analysis",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        832,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "ba6c97e7-bae3-4d37-9495-d44e33ffc375",
      "name": "ü§ñ OpenAI Model (Extractor)",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        848,
        880
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "5KSNGMi3If5yLOOY",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "content": "## üìä Historical Support Data\n\n**Purpose**: Retrieves previous support cases for context\n\n**Data Source**: Google Sheets with historical customer interactions\n\n**Contains**:\n‚Ä¢ Previous questions & answers\n‚Ä¢ Common issues & solutions\n‚Ä¢ Response templates\n‚Ä¢ Product-specific guidance\n\n**Why important**: Ensures consistent, high-quality responses",
        "height": 380,
        "width": 300,
        "color": 4
      },
      "id": "7f282d10-4ab6-4786-8f0c-088e5330833d",
      "name": "üìä Context Data",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1440,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1iiUzIfOoza0czupn_-4oTY6eOmH4vSENwnjSJ6Uxen4",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iiUzIfOoza0czupn_-4oTY6eOmH4vSENwnjSJ6Uxen4/edit?usp=drivesdk",
          "cachedResultName": "Zeiss Primotech Demo customer requests"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "c0ca0c9d-1bcd-4b67-8849-1c38ce004638",
      "name": "üìä Historical Support Cases",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1328,
        560
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ou8lHZRk05dshdzE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "e432ad1c-0cce-4e85-ac49-987dbe4b1f29",
      "name": "üìã Aggregate Support Data",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        1632,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìö Product Knowledge Base\n\n**Purpose**: Accesses comprehensive product documentation\n\n**Data Source**: Google Drive (Primotech Manual PDF)\n\n**Contains**:\n‚Ä¢ Technical specifications\n‚Ä¢ Operating instructions\n‚Ä¢ Troubleshooting guides\n‚Ä¢ Safety information\n\n**Processing**: PDF text extraction for AI analysis\n\n**Cloud advantage**: Always up-to-date documentation",
        "height": 440,
        "width": 300,
        "color": 4
      },
      "id": "610fd4c9-ae9c-4883-8c0e-5204d9d9f81a",
      "name": "üìö Knowledge Base",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1056,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "list",
          "value": "1_MKUQLEw2RS8k-QgAP5rtw-tD49A82lG",
          "cachedResultUrl": "https://drive.google.com/file/d/1_MKUQLEw2RS8k-QgAP5rtw-tD49A82lG/view?usp=drivesdk",
          "cachedResultName": "Primotech_Manual.pdf"
        },
        "options": {}
      },
      "id": "119e7693-af50-459c-8c7f-307a3bde99d4",
      "name": "üìö Download Product Manual",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1440,
        1040
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mcHkpPKIhnTrOWRd",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "fd03f0a8-928b-444c-b52d-d0a0baefbd19",
      "name": "üìÑ Extract PDF Content",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        1632,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üè¢ ERP System Integration\n\n**Purpose**: Retrieves customer & inventory data\n\n**Data Source**: Mock ERP API (demo purposes)\n\n**Provides**:\n‚Ä¢ Customer account information\n‚Ä¢ Order history\n‚Ä¢ Product availability\n‚Ä¢ Spare part pricing\n\n**Note**: In production, this would connect to your real ERP system\n\n**Cloud benefit**: Real-time data access",
        "height": 360,
        "width": 440,
        "color": 5
      },
      "id": "360e764f-aa57-402f-ac6d-65fdee7ee4a5",
      "name": "üè¢ ERP Integration",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1392,
        1600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://httpbin.org/post",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "datasetCsv",
              "value": "question,answer\nHow to reset my password?,Click Forgot Password link.\nWhere can I find invoices?,Go to Billing section."
            },
            {
              "name": "customerQuery",
              "value": "When clicking ‚ÄòExecute workflow‚Äô I get an error saying Node failed"
            },
            {
              "name": "supportEmailSnippet",
              "value": "Hello team, I was trying to execute a workflow and it failed at the HTTP Request node."
            }
          ]
        },
        "options": {}
      },
      "id": "e5cac795-b2a3-4988-ab7f-d2d3b61756e9",
      "name": "üè¢ Check ERP System",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1456,
        1392
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "content": "## ü§ñ Response Generation\n\n**Purpose**: Creates professional customer responses using AI\n\n**AI Model**: OpenAI GPT-4o-mini\n\n**Input Context**:\n‚Ä¢ Customer's original message\n‚Ä¢ Extracted information (sentiment, urgency, etc.)\n‚Ä¢ Product manual content\n‚Ä¢ Historical support cases\n‚Ä¢ ERP data (pricing, availability)\n\n**Output**: Professional German response following company standards",
        "height": 400,
        "width": 320,
        "color": 3
      },
      "id": "aadfae4a-b09e-4535-bb35-d9a26e9fa2a8",
      "name": "ü§ñ AI Response Generation",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1888,
        912
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=This GPT acts as an expert customer support agent designed to draft thoughtful, accurate responses to customer queries. It takes in customer questions and leverages internal product documentation and a history of previously answered queries to prewrite complete and contextually appropriate replies. The GPT uses the full content of \n\n1. the uploaded Primotech Instruction Manual (in German): \n\n2. a CSV dataset of historical customer questions:{{ ($('üìã Aggregate Support Data').item.json.data || []).toJsonString() }}\n\n3. Customer's original query: {{ \n$('Chat Message Received').isExecuted && $('Chat Message Received').last().json.chatInput;\n$('üìß Support Email Received') && $('üìß Support Email Received').item.json.snippet \n$('When clicking ‚ÄòExecute workflow‚Äô').isExecuted && $('When clicking ‚ÄòExecute workflow‚Äô').item.json.snippet\n}} \n\nand answers related to ZEISS Primotech microscopes. These sources provide comprehensive technical, usage, troubleshooting, and product-specific guidance.\n\nThe assistant aims to reduce agent workload by anticipating common follow-up questions, referencing appropriate product knowledge, and maintaining a polite, clear, and supportive tone. It is optimized for high response accuracy, minimal ambiguity, and internal efficiency.\n\nThe assistant never performs web searches. When the available context is insufficient to fully answer a query, it does not generate a customer email. Instead, it presents a warning for the human agent and offers any possibly relevant internal context that may assist in formulating a manual response.\n\nIt avoids answering questions that cannot be supported by available documentation and flags those for manual review. When generating responses, it uses complete, customer-facing sentences, structured for easy review and editing by human support agents, and may include links or references when based on internal content. Clarification is only requested when strictly necessary. If required data is missing, the assistant highlights placeholders for agent completion.\n\nAll responses that are complete must follow this structure:\n- Use a proper salutation starting with 'Sehr geehrter Herr' or 'Sehr geehrte Frau' followed by the customer's last name, if available. If no name is provided, use 'Sehr geehrte/r Kunde/in,'.\n- Begin with 'herzlichen Dank f√ºr Ihre Nachricht.'\n- Then insert the drafted response body.\n- If the request involves a spare part, the assistant uses the following API response and includes the relevant spare part name and price from the returned JSON: {{ $json.inventory.toJsonString() }}\n- Close with: 'Bei weiteren Fragen stehen wir Ihnen gerne zur Verf√ºgung, gerne k√∂nnen sie auch unsere (HILFE Seite)[http://www.zeiss.de] besuchen.' and 'Ich w√ºnsche Ihnen einen sch√∂nen Tag!'\n\nThe assistant uses professional and accessible language, aligned with the tone expected in technical product support, and maintains a helpful and competent demeanor throughout."
      },
      "id": "ba292516-5d13-4d0d-a2a5-35354fee6739",
      "name": "ü§ñ Generate Customer Response",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1856,
        1392
      ],
      "typeVersion": 1.6,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "29b5ad08-7c4e-424c-91c6-23886271edaa",
      "name": "ü§ñ OpenAI Model (Generator)",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1872,
        1568
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "5KSNGMi3If5yLOOY",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "content": "## üë• Human-in-the-Loop Approval\n\n**Purpose**: Ensures quality control before sending responses\n\n**Process**:\n1. AI-generated response is sent to support agent\n2. Agent reviews and can approve/reject/modify\n3. Only approved responses are sent to customers\n\n**Benefits**:\n‚Ä¢ Quality assurance\n‚Ä¢ Learning from modifications\n‚Ä¢ Regulatory compliance\n\n**Note**: Critical for maintaining customer trust",
        "height": 460,
        "width": 320,
        "color": 6
      },
      "id": "b1a1368b-a237-4b56-9401-5b9f3c13d2af",
      "name": "üë• Quality Control",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2320,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "2473fa5c-8b22-479c-95e7-583d4adb934f",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $('üìß Support Email Received').isExecuted }}",
              "rightValue": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "1a4848cd-4889-43c1-bc1c-68aa9a362b47",
      "name": "üìß Email or Chat?",
      "type": "n8n-nodes-base.if",
      "position": [
        2176,
        1392
      ],
      "typeVersion": 2.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "rishi2002guptha@gmail.com",
        "subject": "Customer Support Response - Approval Required",
        "message": "=A customer support response has been generated and requires your approval:\n\n**Customer Query**: \n{{ \n$('Chat Message Received').isExecuted ?? $('Chat Message Received').last().json.chatInput\n$('üìß Support Email Received').isExecuted ?? $('üìß Support Email Received').item.json.snippet \n$('When clicking ‚ÄòExecute workflow‚Äô').isExecuted ?? $('When clicking ‚ÄòExecute workflow‚Äô').item.json.snippet\n}}\n\n**Generated Response**:\n{{ $json.text }}\n\nPlease review and approve/reject this response.",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "id": "e5bcea14-0342-46a2-b5ed-4d1faa83bee7",
      "name": "üìß Request Approval (Email)",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2352,
        1296
      ],
      "webhookId": "7e79cf64-9f20-4968-9bca-3f4dca48ec4c",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "zI7PUrqzCOLQvL3p",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('üìß Support Email Received').item.json.From }}",
        "subject": "Re: Your Support Request",
        "message": "={{ $('ü§ñ Generate Customer Response').item.json.text }}",
        "options": {}
      },
      "id": "f1c09221-ed0a-4d70-8498-662e0d1c3a26",
      "name": "üì§ Send Response to Customer",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2576,
        1296
      ],
      "webhookId": "c994c7a5-5edb-4167-81dd-22e33625450a",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "zI7PUrqzCOLQvL3p",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "409c228d-783f-4e7f-aa47-f0271d8409f8",
              "name": "text",
              "type": "string",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1e6729e8-c335-46a8-b098-1d4c0d7bc52c",
      "name": "üìù Format Chat Response",
      "type": "n8n-nodes-base.set",
      "position": [
        2352,
        1488
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "91daf1c6-138c-4eae-a82f-f2162277598b",
      "name": "Chat Message Received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        512,
        912
      ],
      "webhookId": "3ec1feb8-fc70-4e24-9370-debc47defe81",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "text": "={{ $json.chatInput ? $json.chatInput : $json.snippet }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"required\": [\"category\", \"urgency\", \"sentiment\", \"keywords\", \"productIdentifiers\", \"customerInfo\", \"requiredAction\"],\n  \"properties\": {\n    \"category\": {\n      \"type\": \"string\",\n      \"enum\": [\"technical\", \"billing\", \"sales\", \"returns\", \"general\"],\n      \"description\": \"The primary category of the customer request\"\n    },\n    \"urgency\": {\n      \"type\": \"string\",\n      \"enum\": [\"low\", \"medium\", \"high\", \"critical\"],\n      \"description\": \"How time-sensitive the request is\"\n    },\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\": [\"positive\", \"neutral\", \"negative\", \"very_negative\"],\n      \"description\": \"The emotional tone of the customer's message\"\n    },\n    \"keywords\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Key terms extracted from the request for searching knowledge base and ERP\"\n    },\n    \"productIdentifiers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"model\", \"serial\", \"part\"]\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"description\": \"Any product numbers, models, or parts mentioned in the request\"\n    },\n    \"customerInfo\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"firstName\": {\n          \"type\": \"string\"\n        },\n        \"lastName\": {\n          \"type\": \"string\"\n        },\n        \"customerId\": {\n          \"type\": \"string\",\n          \"description\": \"CRM Customer Id\"\n        },\n        \"mentionsCompetitor\": {\n          \"type\": \"boolean\",\n          \"description\": \"Customer references a competitor product or service\"\n        }\n      }\n    },\n    \"requiredAction\": {\n      \"type\": \"string\",\n      \"enum\": [\"information\", \"replacement\", \"refund\", \"repair\", \"callback\", \"escalation\"],\n      \"description\": \"The primary action needed to resolve the customer's request\"\n    }\n  }}",
        "options": {}
      },
      "id": "c2ca976f-d327-4967-afb3-40620b51e3a2",
      "name": "AI Information Extractor",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        832,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## How to run a demo\n- add google / openai credentials\n- change email of approver to something you can access",
        "height": 200,
        "width": 440,
        "color": 7
      },
      "id": "1f88a5ce-8f43-490e-a821-aad6cfef1218",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -112,
        688
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {
    "üìä Historical Support Cases": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "üìß Request Approval (Email)": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "üì§ Send Response to Customer": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ]
  },
  "connections": {
    "üìß Email or Chat?": {
      "main": [
        [
          {
            "node": "üìß Request Approval (Email)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìù Format Chat Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Message Received": {
      "main": [
        [
          {
            "node": "AI Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üè¢ Check ERP System": {
      "main": [
        [
          {
            "node": "ü§ñ Generate Customer Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Information Extractor": {
      "main": [
        [
          {
            "node": "üìä Historical Support Cases",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÑ Extract PDF Content": {
      "main": [
        []
      ]
    },
    "üìã Aggregate Support Data": {
      "main": [
        [
          {
            "node": "üè¢ Check ERP System",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìß Support Email Received": {
      "main": [
        [
          {
            "node": "AI Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìö Download Product Manual": {
      "main": [
        [
          {
            "node": "üìÑ Extract PDF Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Historical Support Cases": {
      "main": [
        [
          {
            "node": "üìã Aggregate Support Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìß Request Approval (Email)": {
      "main": [
        [
          {
            "node": "üì§ Send Response to Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ OpenAI Model (Extractor)": {
      "ai_languageModel": [
        [
          {
            "node": "AI Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ OpenAI Model (Generator)": {
      "ai_languageModel": [
        [
          {
            "node": "ü§ñ Generate Customer Response",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ Generate Customer Response": {
      "main": [
        [
          {
            "node": "üìß Email or Chat?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "271d7e09-280b-4ae7-ab13-bf8a77e88de4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a0cf3836e389695b348116a9f5e30f08ca366163796d4dde35f439e01c1b286b"
  },
  "id": "OvAYOC0OJmsNPubu",
  "tags": []
}